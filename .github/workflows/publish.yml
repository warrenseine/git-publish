name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      repository:
        description: "Target repository (pypi|testpypi)"
        required: false
        default: "pypi"

permissions:
  id-token: write # Required for OIDC (Trusted Publishing)
  contents: read # To read the repository contents

jobs:
  build-and-publish-testpypi:
    if: ${{ (github.event_name == 'release' && github.event.release.prerelease) || (github.event_name == 'workflow_dispatch' && inputs.repository == 'testpypi') }}
    runs-on: ubuntu-latest
    environment: testpypi
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install build backend
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Build sdist and wheel
        run: |
          python -m build

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          print-hash: true
          skip-existing: true

  build-and-publish:
    if: ${{ (github.event_name == 'release' && !github.event.release.prerelease) || (github.event_name == 'workflow_dispatch' && inputs.repository == 'pypi') }}
    runs-on: ubuntu-latest
    environment: pypi
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install build backend
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Build sdist and wheel
        run: |
          python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # No credentials needed; uses OIDC Trusted Publisher
          print-hash: true
